{"version":3,"sources":["pkg/api/index.js","components/commons/index.js","pkg/reducers/index.js","components/auth/currentUser.js","components/pages/attendance/calender.js","components/pages/index.js","components/pages/hotel/index.js","components/pages/employee/index.js","components/pages/addemployee/index.js","components/pages/attendance/index.js","components/commons/layout.js","pkg/router/index.js","App.js","index.js"],"names":["_postRequest","url","body","a","_h","Headers","append","fetch","method","JSON","stringify","headers","_r","ok","success","error","json","status","message","result","_getRequest","apiDomain","fn","meta","extend","fields","total","queryString","x","encodeURIComponent","ex","length","join","slice","console","log","re","_re","Option","DatePicker","RangePicker","Select","filerColumn","Intl","NumberFormat","style","unitDisplay","searchFields","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","placeholder","value","onChange","e","target","onPressEnter","width","marginBottom","display","type","onClick","icon","SearchOutlined","size","filterIcon","color","defaultFilteredValue","undefined","MultiSelect","props","maxTag","listValue","useState","selected","setSelected","showTag","React","useEffect","mode","optionLabelProp","includes","map","item","maxTagCount","maxTagPlaceholder","key","label","UserContext","createContext","UserProvider","children","contextValue","useReducer","state","action","email","localStorage","setItem","api_token","_u","user","roles","Array","isArray","permissions","reduce","res","role","isAdmin","some","name","toLowerCase","removeItem","Provider","User","context","provider","Component","useContext","dateCellRender","listData","date","content","getListData","className","text","getMonthData","month","CalendarCustom","monthCellRender","v","Todo","createFromIconfontCN","scriptUrl","subPages1","path","DashboardOutlined","paddingLeft","component","lstemp","setLstemp","open","data","popup","setPopup","Form","useForm","form","hotels","getData","onFinish","values","password","rowKey","loading","dataSource","columns","title","align","onFilter","record","toString","render","tags","setFieldsValue","centered","closable","maskClosable","visible","forceRender","keyboard","okText","onOk","submit","cancelText","onCancel","resetFields","onFinishFailed","errorInfo","labelCol","span","wrapperCol","layout","gutter","xs","sm","md","Item","TeamOutlined","employees","employee","find","id","tag","index","toUpperCase","r","disabled","getValueFromEvent","UsergroupAddOutlined","initialValues","offset","ToolOutlined","HomeOutlined","RocketOutlined","rotate","subPages2","SelectOutlined","GifOutlined","subPages3","AreaChartOutlined","subPages4","routerPages","menuPages","AdminLayout","isShow","setIsShow","dispatchUser","subMenu","theme","LogoutOutlined","Header","checked","overlay","trigger","UserOutlined","DownOutlined","Sider","breakpoint","onCollapse","collapse","document","clientWidth","defaultSelectedKeys","window","location","pathname","menuItemGroup","menuItemGroupKey","ItemGroup","menuItem","to","Content","RouterContainer","exact","Home","p","NotFound","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.7c42ea1c.chunk.js","sourcesContent":["// import Login from \"../../components/auth/login\";\n\n// const _promise = obj => new Promise(resolve => setTimeout(() => resolve(obj), 1000));\n\nconst apiDomain = 'https://a.adsplay.xyz';\nconst postRequest = async (fn, body) => {\n  try {\n    let _h = new Headers();\n    _h.append('content-type', 'application/json');\n    let _r = await fetch(`${apiDomain}/${fn}`, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: _h\n    });\n    if (!_r.ok) return { success: false, error: 'Api error' };\n    _r = await _r.json();\n    if (_r.status !== 200)  return { success: false, error: _r.message || 'Api ok but smt error' };\n    return { success: true, result: _r };\n  } catch(e) {\n    return { success: false, error: e };\n  }\n}\nconst _postRequest = async (url, body) => {\n  try {\n    let _h = new Headers();\n    _h.append('content-type', 'application/json');\n    let _r = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: _h\n    });\n    if (!_r.ok) return { success: false, error: 'Api error' };\n    _r = await _r.json();\n    if (_r.status !== 200)  return { success: false, error: _r.message || 'Api ok but smt error' };\n    return { success: true, result: _r };\n  } catch(e) {\n    return { success: false, error: e };\n  }\n}\n\nconst _getRequest = async (apiDomain ,fn, api_token='', meta = {}, extend = []) => {\n  try {\n    let _h = new Headers()\n    // _h.append('authorization',api_token);\n    _h.append(\"Content-Type\", \"text/plain;charset=UTF-8\")\n    delete meta.fields;\n    delete meta.total;  \n    let queryString = '';\n    for (let x in meta ) {\n      if (!x || !meta[x]) continue;\n      queryString += `&${x}=${encodeURIComponent(meta[x])}`;\n    }\n    const ex = extend.length === 0 ? '' : '/' + extend.join('/');\n    var url = `${apiDomain}/api/${fn}${ex}?${queryString.slice(1)}`;\n    console.log(url)\n    let re = await fetch(url, {\n        method: 'GET',\n        headers: _h\n    })\n    if(!re.ok) return {success: false, error: 'Api error'}\n    let _re = await re.json();\n    // if(_re.status === 401) return window.location.reload()\n    // if(_re.status === 403) return {success: true, result: {data: []}}\n    // if(_re.status !== 200) return {success: false, error: _re.message || 'Api ok but smt error'}\n    \n    return {success: true, result: _re} // result {data, meta}\n  } catch (e) {\n    return { success: false, error: e };\n  }\n}\n\nconst getRequest = async (fn, api_token, meta = {}, extend = []) => {\n  try {\n    let _h = new Headers()\n    _h.append('authorization',api_token);\n    delete meta.fields;\n    delete meta.total;  \n    let queryString = '';\n    for (let x in meta ) {\n      if (!x || !meta[x]) continue;\n      queryString += `&${x}=${encodeURIComponent(meta[x])}`;\n    }\n    const ex = extend.length === 0 ? '' : '/' + extend.join('/');\n    var url = `${apiDomain}/api/${fn}${ex}?${queryString.slice(1)}`;\n    let re = await fetch(url, {\n        method: 'GET',\n        headers: _h\n    })\n    if(!re.ok) return {success: false, error: 'Api error'}\n    let _re = await re.json();\n    if(_re.status === 401) return window.location.reload()\n    if(_re.status === 403) return {success: true, result: {data: []}}\n    if(_re.status !== 200) return {success: false, error: _re.message || 'Api ok but smt error'}\n    \n    return {success: true, result: _re} // result {data, meta}\n  } catch (e) {\n    return { success: false, error: e };\n  }\n}\n\nconst postRequestItem = async(fn, api_token, data) => {\n  try {\n    let _h = new Headers()\n    _h.append('authorization',api_token);\n    _h.append('Content-Type', 'application/json');\n    var url = `${apiDomain}/api/${fn}`;\n    let re = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: _h\n    })\n    if(!re.ok) return {success: false, error: 'Api error'}\n    let _re = await re.json();\n    // if(_re.status !== 200) return {success: false, error: _re.message || 'Api ok but smt error'}\n    if (_re.status === 500) return {success: false, error: 'The name has already been taken.'} /* */\n    return {success: true, result: _re}\n  } catch (e) {\n    return {\n      success: false,\n      error: e\n    }\n  }\n}\nconst putRequest = async(fn, api_token, data, id) => {\n  if (!id) return { success: false, error: '' };\n  try {\n    let _h = new Headers()\n    _h.append('authorization',api_token);\n    _h.append('Content-Type', 'application/json');\n    var url = `${apiDomain}/api/${fn}/${id}`;\n    \n    let re = await fetch(url, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n      headers: _h\n    })\n    if(!re.ok) return {success: false, error: 'Api error'}\n    let _re = await re.json();\n    // if(_re.status !== 200) return {success: false, error: _re.message || 'Api ok but smt error'}\n    return {success: true, result: _re}\n  } catch (e) {\n    return { success: false, error: e };\n  }\n}\nconst _putRequest = async(apiDomain, fn, data, id) => {\n  if (!id) return { success: false, error: '' };\n  try {\n    let _h = new Headers()\n    _h.append(\"Content-Type\", \"application/json\");\n    var url = `${apiDomain}/api/${fn}/${id}`;\n    console.log(url)\n    let re = await fetch(url, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n      headers: _h\n    })\n    console.log(re)\n    if(!re.ok) return {success: false, error: 'Api error'}\n    let _re = await re.json();\n    // if(_re.status !== 200) return {success: false, error: _re.message || 'Api ok but smt error'}\n    return {success: true, result: _re}\n  } catch (e) {\n    return { success: false, error: e };\n  }\n}\n\nconst signin = {\n  withPw: (email, password) => postRequest('login', { email, password }),\n  withToken: (email, api_token) => postRequest('info', { email, api_token })\n}\n\nconst fetchData = {\n  transaction: () => {},\n  campaigns: (api_token, meta) => getRequest('campaigns', api_token, meta),\n  flights: (api_token, meta) => getRequest('flights', api_token, meta),\n  accounts: (api_token, meta) => getRequest('accounts', api_token, meta),\n  provinces: (api_token, meta) => getRequest('provinces', api_token, meta),\n  categories: (api_token, meta) => getRequest('categories', api_token, meta),\n  websiteapps: (api_token, meta) => getRequest('website-apps', api_token, meta),\n  users: (api_token, meta) => getRequest('users', api_token, meta),\n  config: (api_token, meta) => getRequest('config', api_token, meta),\n}\n\nconst postData = {\n  transaction: () => {},\n  flights: (api_token, data) => postRequestItem('flights', api_token, data),\n  roles: (api_token, data) => postRequestItem('roles', api_token, data),\n  user: (api_token, data) => postRequestItem('user', api_token, data),\n  campaigns: (api_token, data) => postRequestItem('campaigns', api_token, data),\n}\n// putData -> update, postData -> create\nconst putData = {\n  transaction: () => {},\n  flights: (api_token, data) => putRequest('flights', api_token, data, data.id),\n  roles: (api_token, data) => putRequest('roles', api_token, data, data.id),\n  user: (api_token, data) => putRequest('user', api_token, data, data.id),\n  campaigns: (api_token, data) => putRequest('campaigns', api_token, data, data.id),\n  accounts: (api_token, data) => putRequest('accounts', api_token, data, data.id)\n}\n\nexport { signin, fetchData, postData, putData, getRequest, _getRequest, _putRequest, _postRequest};\n\n ","import React, { useState} from 'react';\n\nimport message from 'antd/lib/message';\nimport notification from 'antd/lib/notification';\nimport * as utility from './utility';\nimport Input from 'antd/lib/input';\nimport { Button, Space} from 'antd';\nimport { SearchOutlined, DownOutlined, PlusOutlined, MinusOutlined} from '@ant-design/icons';\nimport { Select, DatePicker, InputNumber, Row, Col, Radio, Switch } from 'antd';\n\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\nconst formatter = new Intl.NumberFormat('en-US', {\n\tstyle: 'decimal',\n\tunitDisplay: 'narrow'\n})\nexport const messageError = msg => {\nif (msg) {\n\tlet content;\n\tswitch (typeof msg) {\n\tcase 'string': \n\t\tcontent = msg;\n\t\tbreak;\n\tcase 'object':\n\t\tcontent = (\n\t\t<div>\n\t\t\t{\n\t\t\tObject.keys(msg).map((key, index) => (\n\t\t\t\t<div key={index}>\n\t\t\t\t- {key}: {msg[key]}\n\t\t\t\t</div>\n\t\t\t))\n\t\t\t}\n\t\t</div>\n\t\t);\n\t\tbreak;\n\tdefault:\n\t\tcontent = JSON.stringify(msg)\n\t\tbreak;\n\t}\n\treturn notification.error({\n\tmessage: 'Something wrong happened.',\n\tdescription: content,\n\tduration: 5\n\t})\n}\n\t\nreturn message.error('Something wrong happened.');\n}\n\nexport const messageSuccess = msg => {\nreturn message.success(msg || 'Action successfully completed.');\n}\n\nexport const filerColumn = (searchFields, dataIndex) => ({\n\tfilterDropdown: ({\n\t\tsetSelectedKeys,\n\t\tselectedKeys,\n\t\tconfirm,\n\t\tclearFilters\n\t\t}) => (\n\t\t<div style={{ padding: 8 }}>\n\t\t\t<Input\n\t\t\t\tplaceholder={`Search ${dataIndex}`}\n\t\t\t\tvalue={selectedKeys[0]}\n\t\t\t\tonChange={(e) =>\n\t\t\t\t\tsetSelectedKeys(e.target.value ? [e.target.value] : [])\n\t\t\t\t}\n\t\t\t\tonPressEnter={() =>\n\t\t\t\t\tconfirm()\n\t\t\t\t}\n\t\t\t\tstyle={{ width: 188, marginBottom: 8, display: \"block\" }}\n\t\t\t/>\n\t\t\t<Space>\n\t\t\t<Button\n\t\t\t\ttype=\"primary\"\n\t\t\t\tonClick={() => confirm()}\n\t\t\t\ticon={<SearchOutlined />}\n\t\t\t\tsize=\"small\"\n\t\t\t\tstyle={{ width: 90 }}\n\t\t\t>\n\t\t\t\tSearch\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tonClick={() => clearFilters()}\n\t\t\t\tsize=\"small\"\n\t\t\t\tstyle={{ width: 90 }}\n\t\t\t>\n\t\t\t\tReset\n\t\t\t</Button>\n\t\t\t</Space>\n\t\t</div>\n\t\t),\n\tfilterIcon: () => {\n\t\treturn (\n\t\t<SearchOutlined style={!!searchFields[dataIndex] ? { color: \"#1890ff\" }: {color: '#c0c0c0'}} />\n\t\t)},\n\t// filteredValue: searchFields[dataIndex] ? [searchFields[dataIndex]] : undefined,\n\tdefaultFilteredValue: searchFields[dataIndex] ? [searchFields[dataIndex]] : undefined\n})\n\nexport const filterSelectCheck = (searchFields, dataIndex) => {\n\treturn {\n\t\tfilterDropdown: ({\n\t\t\tsetSelectedKeys,\n\t\t\tselectedKeys,\n\t\t\tconfirm,\n\t\t\tclearFilters\n\t\t\t}) => (\n\t\t\t\t<Select\n\t\t\t\t\tallowClear\n\t\t\t\t\tplaceholder={\"All\"}\n\t\t\t\t\toptions={[{label: 'Diable', value: 0}, {label: 'Enable', value: 1}]}\n\t\t\t\t\tonChange={(v, l)=>{\n\t\t\t\t\t\tif(l) {\n\t\t\t\t\t\t\tconsole.log(v,l)\n\t\t\t\t\t\t\tsetSelectedKeys(l.value);\n\t\t\t\t\t\t\tconfirm();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclearFilters();\t\t\t\t\t\t\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t),\n\t\tfilterIcon: (filtered) => (\n\t\t\t<DownOutlined style={{ color: filtered ? \"#1890ff\" : undefined }}/>\n\t\t),\n\t\tfilteredValue: searchFields[dataIndex] || null,\n\t\tfilterMultiple: false,\n\t}\n}\n\nexport const filterCheck = (searchFields, dataIndex, options = [\n\t{\n\t  text: 'Enable',\n\t  value: '1',\n\t},\n\t{\n\t  text: 'Disable',\n\t  value: '0',\n\t},\n  ]) => ({\n\tfilters: options,\n\tfilteredValue: searchFields[dataIndex] || null,\n\tfilterMultiple: false,\n})\n\nexport const filterSelect = (searchFields, dataIndex, requireData) => {\n\t// const data = requireData ? requireData.map(item=>item.name) : []\n\treturn {\n\t\tfilterDropdown: ({\n\t\t\tsetSelectedKeys,\n\t\t\tselectedKeys,\n\t\t\tconfirm,\n\t\t\tclearFilters\n\t\t\t}) => (\n\t\t\t\t[<Select \n\t\t\t\t\tkey='filter select'\n\t\t\t\t\tstyle={{ width: '100%' }}  tokenSeparators={[',']}\n\t\t\t\t\tallowClear\n\t\t\t\t\tshowSearch\n\t\t\t\t\tplaceholder= {`Search `}\n\t\t\t\t\tdefaultValue={selectedKeys}\n\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\tsetSelectedKeys(value.toString());\n\t\t\t\t\t\t\tconfirm();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclearFilters();\n\t\t\t\t\t}}\n\t\t\t\t\toptions={requireData ? requireData.map(item => ({label: item.name, value: item.id})) : []}\n\t\t\t\t\tfilterOption={(inputValue, options) => {\n\t\t\t\t\t\treturn options.label.toLowerCase().includes(inputValue.toLowerCase())\n\t\t\t\t\t}}\n\t\t\t\t\tnotFoundContent={'Not Found'}\n\t\t\t\t/>,\n\t\t\t\t// [<CustomSelect\n\t\t\t\t// \tkey='cus sel'\n\t\t\t\t// \tsearchFields={searchFields}\n\t\t\t\t// \tdataIndex={dataIndex}\n\t\t\t\t// \tdata={requireData} \n\t\t\t\t// \tdataIndex={dataIndex} \n\t\t\t\t// \tconfirm={confirm} \n\t\t\t\t// \tsetSelectedKeys={setSelectedKeys} \n\t\t\t\t// \tclearFilters={clearFilters}\n\t\t\t\t// />,\n\t\t\t\t<Button\n\t\t\t\t\tkey='rs'\n\t\t\t\t\tonClick={() => clearFilters()}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t>\n\t\t\t\t\tReset\n\t\t\t\t</Button>]\n\t\t),\n\t\tfilterIcon: (filtered) => (\n\t\t\t<DownOutlined style={{ color: filtered ? \"#1890ff\" : undefined }}/>\n\t\t),\n\t\tfilteredValue: searchFields[dataIndex] || null,\n\t}\n}\n\nexport const filterDatePicker = (searchFields, dataIndex) => {\n\treturn {\n\t\tfilterDropdown: ({\n\t\t\tsetSelectedKeys,\n\t\t\tselectedKeys,\n\t\t\tconfirm,\n\t\t\tclearFilters\n\t\t\t}) => (\n\t\t\t\t<DatePicker onChange={(date, dateString) => {\n\t\t\t\t\tif(dateString) {\n\t\t\t\t\t\tsetSelectedKeys(dateString);\n\t\t\t\t\t\tconfirm();\n\t\t\t\t\t}\n\t\t\t\t\tclearFilters();\n\t\t\t\t}}/>\n\t\t),\n\t\tfilterIcon: (filtered) => (\n\t\t\t<DownOutlined style={{ color: filtered ? \"#1890ff\" : undefined }}/>\n\t\t),\n\t\tfilteredValue: searchFields[dataIndex] || null,\n\t}\n}\n\n// select filter\nexport const CustomSelect = (props) => {\n\tconst { data, confirm, setSelectedKeys, clearFilters, labelPropName='name', valuePropName ='id' } = props;\n\tconst [search, setSearch] = useState('');\n\tlet temp = data.filter(item => item.name.includes(search)).length === 0 ? data : data.filter(item => item.name.includes(search));\n\t// console.log(searchFields[dataIndex] ? searchFields[dataIndex] : 'k co')\n\n\treturn (\n\t\t<div>\n\t\t\t<Select \n\t\t\t\tstyle={{ width: '100%' }}  tokenSeparators={[',']}\n\t\t\t\tonSearch={(v) => {\n\t\t\t\t\tsetSearch(v)\n\t\t\t\t}}\n\t\t\t\tallowClear\n\t\t\t\tshowSearch\n\t\t\t\tplaceholder= {`Search `}\n\t\t\t\tonChange={(value) => {\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\t// value -> account_id\n\t\t\t\t\t\t// console.log(data.filter(item => item.name === value)[0])\n\t\t\t\t\t\tconsole.log(value)\n\t\t\t\t\t\tsetSelectedKeys(value)\n\t\t\t\t\t\tconfirm();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tclearFilters();\n\t\t\t\t}}\n\t\t\t\toptions={temp.map(item => ({label: item[labelPropName], value: item[valuePropName]}))}\n\t\t\t>\n\t\t\t\t{/* {temp1.map(d => (\n\t\t\t\t\t<Option key={d.id}>{d.name}</Option>\n\t\t\t\t))} */}\n\t\t\t</Select>\n\t\t</div>\n\n\t)\n\n}\n\nexport const MultiSelect = (props) => {\n\tconst { maxTag, listValue, placeholder, onChange, value = [] } = props;\n\tconst [selected, setSelected] = useState(value?value:[]);\n\n\tlet showTag = false;\n\tif (selected.length > maxTag) showTag = true;\n\tconsole.log(selected)\n\tReact.useEffect(() => {\n\t\tif (onChange) {\n\t\t  \tonChange(selected);\n\t\t}\n\t}, [selected, onChange]);\n\treturn (\n\t\t<Select \n\t\t\tmode={'multiple'}\n\t\t\tplaceholder={placeholder}\n\t\t\tvalue={selected}\n\t\t\toptionLabelProp=\"label\"\n\t\t\tonChange={(e)=>{\n\t\t\t\tif (e.length > listValue.length) {\n\t\t\t\t\tsetSelected([]);\n\t\t\t\t} else {\n\t\t\t\t\tif (e.includes('all')) {\n\t\t\t\t\t\tsetSelected(listValue.map(item=>item.value));\n\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsetSelected(e); \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}}\n\t\t\tmaxTagCount={showTag ? 0 : maxTag}\n\t\t\t// lst [0,1,2,...24]\n\t\t\tmaxTagPlaceholder={`${selected.length === listValue.length ? 'All' : selected.length} selected`}\n\t\t>\n\t\t\t<Option key={'all'} value='all' label='Select All'>Select All</Option>\n\t\t\t{listValue.map(item => \n\t\t\t\t<Option key={item.value} value={item.value} label={item.label}>\n\t\t\t\t\t{item.label}\n\t\t\t\t</Option>\n\t\t\t\t\n\t\t\t)}\n\t\t</Select>\n\t)\n}\n\nexport const CustomInputNumber = (props) => {\n\tconst {label, value, onChange} = props;\n\tconst [number, setNumber] = useState(value);\n\tReact.useEffect(() => {\n\t\tif (onChange) {\n\t\t  \tonChange(number);\n\t\t}\n\t}, [number, onChange]);\n\n\treturn (\n\t\t<div>\n\t\t\t<InputNumber\n\t\t\t\tvalue={number}\n\t\t\t\tstyle={{width: '40%'}}\n\t\t\t\tformatter={value => formatter.format(value.replace(/\\D+/g, \"\"))}\n\t\t\t\tparser={value => value.replace(/\\D+/g, \"\")} // \\D ko phai ki tu so\n\t\t\t\tonChange={value=>setNumber(Number(value))}\n\t\t\t/>\n\t\t\t{label && (<label style={{fontWeight: 'normal', marginLeft: 10}}>{label}</label>)}\n\t\t</div>\n\t\t\n\t)\n}\n\nexport const RadioGroup = (props) => {\n\tconst {value, onChange, data} = props;\n\tconst [choose, setChoose] = useState(value?value:undefined);\n\tReact.useEffect(() => {\n\t\tif (onChange) {\n\t\t  \tonChange(choose);\n\t\t}\n\t}, [choose, onChange]);\n\treturn (\n\t\t<Radio.Group onChange={e=>setChoose(e.target.value)} value={choose}>\n\t\t\t{data.map(item => \n\t\t\t\t<Radio style={{display:'block'}} value={item.value} key={item.value}>{item.label}</Radio>\n\t\t\t)}\n\t\t</Radio.Group>\t\n\t)\n}\n\nexport const ListDateRangePicker = (props) => {\n\tconst {value = [], onChange, editable} = props;\n\t// const _v = value? Object.values({...value[0],...{key:null}}).filter(item=> item !== null):[];\n\tconst [choose, setChoose] = useState(value);\n\tReact.useEffect(() => {\n\t\tif (onChange) {\n\t\t  \tonChange(choose);\n\t\t}\n\t}, [choose, onChange]);\n\tconst ActionDate = (idx, key) => {\n\t\tswitch (key) {\n\t\t\tcase 0: {\n\t\t\t\t//del\n\t\t\t\tsetChoose(choose.filter((item, index)=>index!==idx))\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 1: {\n\t\t\t\t//add\n\t\t\t\tlet check = false;\n\t\t\t\tchoose.map(item=>{\n\t\t\t\t\tif (item.from === undefined || item.to === undefined) {check = true}\n\t\t\t\t\treturn item;\n\t\t\t\t})\n\t\t\t\tif (check) return;\n\t\t\t\tsetChoose([...choose, {from: undefined,to: undefined}]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n\tconst UpdateDate = (e, index) => {\n\t\tconst newDate = e.map(item=> item.format('YYYY-MM-DD'));\n\t\tsetChoose(prev => prev.map((item, idx) => idx === index ? {to: newDate[1], from: newDate[0]} : item));\n\t}\n \tconst disabledDate = (current, index) => {\n\t\t// Can not select days before today and today\n\t\tlet compare = false; // moment().startOf('day')\n\t\t// compare moment(choose[index-1].from)\n\t\tif (index === 0) {\n\t\t\t// nothing \n\t\t} else {\n\t\t\tcompare = moment(choose[index-1].to, 'YYYY-MM-DD').isAfter(moment().startOf('day'));\n\t\t}\n\t\tconst _d = compare ? moment(choose[index-1].to).add('days', 1) : moment().startOf('day');\n\t\treturn current && current < _d;\n\t}\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\tchoose.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={index} style={{marginBottom:3}}>\n\t\t\t\t\t\t\t<RangePicker \n\t\t\t\t\t\t\t\tseparator={'-'}\n\t\t\t\t\t\t\t\tvalue={[item.from?moment(item.from, 'YYYY-MM-DD'):undefined, item.to?moment(item.to, 'YYYY-MM-DD'):undefined]}\n\t\t\t\t\t\t\t\tformat={'YYYY-MM-DD'}\n\t\t\t\t\t\t\t\tonChange={(e=>UpdateDate(e, index))}\n\t\t\t\t\t\t\t\tallowClear={false}\n\t\t\t\t\t\t\t\tstyle={{width:'80%',marginBottom:5}}\n\t\t\t\t\t\t\t\tdisabled={editable === 0 ? true : false} \n\t\t\t\t\t\t\t\tdisabledDate={current => disabledDate(current, index)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\ticon={<MinusOutlined />}\n\t\t\t\t\t\t\t\tshape={'circle'}\n\t\t\t\t\t\t\t\tstyle={{float: 'right', display: 'inline-block', color: 'red', background: 'white', border: '1px solid red'}}\n\t\t\t\t\t\t\t\tonClick={(e) => {ActionDate(index, 0)}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t\t<Button \n\t\t\t\ticon={<PlusOutlined />}\n\t\t\t\tshape={'circle'}\n\t\t\t\tstyle={{float: 'right', display: 'inline-block', color: 'green', background: 'white', border: '1px solid green'}}\n\t\t\t\tonClick={(e) => {ActionDate(1, 1)}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport const CustomSwitch = (props) => {\n\tconst {value = [], onChange} = props;\n\tconst [choose, setChoose] = useState(value);\n\tReact.useEffect(() => {\n\t\tif (onChange) {\n\t\t  \tonChange(choose);\n\t\t}\n\t}, [choose, onChange]);\n\treturn <Switch checked={choose===1?true:false} onChange={v=>setChoose(Number(v))}/>\n}\nexport const CustomSelectObj = (props) => {\n\tconst {value = {}, onChange, data, notFound='', disabled} = props;\n\t// data: label, obj\n\t// console.log(value)\n\tconst [choose, setChoose] = useState(value.id);\n\tReact.useEffect(() => {\n\t\tif (onChange) {\n\t\t  \tonChange(choose);\n\t\t}\n\t}, [choose, onChange]);\n\treturn <Select \n\t\tdisabled={disabled}\n\t\tallowClear\n\t\tshowSearch\n\t\toptions={data}\n\t\tfilterOption={(inputValue, options) => {\n\t\t\treturn options.label.toLowerCase().includes(inputValue.toLowerCase())\n\t\t}}\n\t\tvalue={choose}\n\t\tonChange={v=>setChoose(v)}\n\t\tnotFoundContent={notFound}\n\t/>\n\t// return <div></div>\n}\n\nexport const MultiInput = props => {\n\tconst { value = [], onChange = () => {} , label = []} = props;\n\tconst [newValue, setNewValue] = useState(value);\n\t\n\tReact.useEffect(() => {\n\t\tif (onChange) {\n\t\t  \tonChange(newValue);\n\t\t}\n\t}, [newValue, onChange]);\n\n\tconst onChangeNumber = (value, index) => {\n\t\tnewValue[index] = Number(value);\n\t\tsetNewValue(newValue);\n\t}\n\treturn (\n\t\t<div style={{display: 'inline-flex'}}>\n\t\t\t{newValue.map((item, index) => {\n\t\t\t\treturn <CustomInputNumber value={item} label={label[index]} key={index} onChange={v=>onChangeNumber(v, index)}/>\n\t\t\t})}\n\t\t</div>\n\t)\n}\nexport { utility };","import React, { useReducer, createContext } from 'react';\n// import { useHistory } from 'react-router-dom';\n\nconst UserContext = createContext();\n\nconst UserProvider = ({ children }) => {\n  const contextValue = useReducer((state, action) => {\n    switch (action.type) {\n      case 'LOGIN':\n        (action.email && localStorage.setItem('email', action.email));\n        (action.api_token && localStorage.setItem('api_token', action.api_token));\n        const _u = action.user || {};\n        _u.roles = Array.isArray(_u.roles) ? _u.roles.slice(0) : [];\n        _u.permissions = _u.roles.reduce((res, role) => [...res, ...role.permissions], []);\n        _u.isAdmin = _u.roles.some(role => role.name.toLowerCase() === 'admin');\n        _u.api_token = action.api_token;\n        return _u;\n      case 'LOGOUT':\n        localStorage.removeItem('email');\n        localStorage.removeItem('api_token');\n        return {};\n      default: return state;\n    }\n  }, {});\n  return (\n    <UserContext.Provider value={contextValue}>\n      {children}\n    </UserContext.Provider>\n  );\n};\nexport const User = {\n  context: UserContext,\n  provider: Component => props => <UserProvider><Component {...props} /></UserProvider>\n}\n\nexport const PageReducer = (state, action) => {\n  // console.log(action)\n  switch (action.type) {\n    \n    case 'init_search_field':\n      return { ...state, searchFields: extractSearch(action.data)}\n    case 'update_search_field':\n      return { ...state, searchFields: action.data };\n    case 'get_require_data': \n      return { ...state, requireData: { ...state.requireData, ...action.data }};\n    case 'set_editdata': \n      return { ...state, editData: { ...state.editData, ...action.data }};\n    case 'set_baseform': \n      return { ...state, baseForm: { ...state.baseForm, ...action.data }};\n    case 'get_extend_data' :\n      return { ...state, updateData: { ...state.updateData, ...action.data }}; \n    default:\n      return state;\n  } \n}\n\n\nfunction extractSearch(search) {\n\tlet query = {};\n  query = search.slice(1).split('&').reduce(\n    (r, i) => (!!i) ? Object.assign({}, r, { [i.split('=')[0]]: decodeURIComponent(i.split('=')[1]) }) : r, {}\n  );\n  if (!query.offset || query.offset < 0 ) query.offset = 1 \n  if (!query.limit || [10, 20, 30].includes(query.limit)) query.limit = 20\n  let re = /(\\w)+\\|(asc|desc)/;\n  if (!re.test(query.order)) query.order = 'id|desc';\n\treturn query;\n}","import React, { useContext } from 'react';\nimport Login from './login';\nimport { User } from '@pkg/reducers';\n\nconst CurrentUser = props => {\n  const { children } = props;\n  const [ _user, dispatchUser ] = useContext(User.context);\n\n  const onLogin = (user, email, api_token) => {\n    dispatchUser({ user, email, api_token, type: 'LOGIN' });\n  }\n  // return _user.roles ? children : <Login onLogin={onLogin} />;\n  return children;\n}\n\nexport default User.provider(CurrentUser);\n","import React from 'react';\nimport { Calendar, Badge } from 'antd';\nimport \"./index.css\";\nfunction getListData(value) {\n  let listData;\n  switch (value.date()) {\n    case 8:\n      listData = [\n        { type: 'warning', content: 'This is warning event.' },\n        { type: 'success', content: 'This is usual event.' },\n      ];\n      break;\n    case 10:\n      listData = [\n        { type: 'warning', content: 'This is warning event.' },\n        { type: 'success', content: 'This is usual event.' },\n        { type: 'error', content: 'This is error event.' },\n      ];\n      break;\n    case 15:\n      listData = [\n        { type: 'warning', content: 'This is warning event' },\n        { type: 'success', content: 'This is very long usual event。。....' },\n      ];\n      break;\n    default:\n  }\n  return listData || [];\n}\n\nfunction dateCellRender(value) {\n  const listData = getListData(value);\n  return (\n    <ul className=\"events\">\n      {listData.map(item => (\n        <li key={item.content}>\n          <Badge status={item.type} text={item.content} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction getMonthData(value) {\n  if (value.month() === 8) {\n    return 1394;\n  }\n}\n\nfunction monthCellRender(value) {\n  const num = getMonthData(value);\n  return num ? (\n    <div className=\"notes-month\">\n      <section>{num}</section>\n      <span>Backlog number</span>\n    </div>\n  ) : null;\n}\n\nexport const CalendarCustom = (props) => (\n    <Calendar \n        dateCellRender={\n            dateCellRender\n        } \n        monthCellRender={\n            (v) => {\n                return getMonthData(v) ? (\n                    <div className=\"notes-month\">\n                        <section>{getMonthData(v)}</section>\n                        <span>Backlog number</span>\n                    </div>\n                ) :null\n            }\n        } />\n)","import React from 'react';\n\nimport { RocketOutlined, UsergroupAddOutlined, DashboardOutlined,\n  AreaChartOutlined, TeamOutlined, ToolOutlined, HomeOutlined, SelectOutlined, GifOutlined\n} from '@ant-design/icons';\nimport { createFromIconfontCN } from '@ant-design/icons';\nimport { Employee } from './employee';\nimport { Hotel } from './hotel';\nimport { Addemployee } from './addemployee';\nimport { Attendance } from './attendance';\nconst IconFont = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_8d5l8fzk5b87iudi.js',\n});\n\n\n\nconst Todo = () => {\n  return <h1>To Do</h1>\n}\n\nconst subPages1 = [\n  { path: '/hotel', label: (<><DashboardOutlined style={{paddingLeft:10}}/> Hotel </>), component: Hotel, permissions: '' },\n  { path: '/employee', label: (<><TeamOutlined style={{paddingLeft:10}}/> Employee </>), component: Employee, permissions: '' },\n  { path: '/2', label: (<><UsergroupAddOutlined style={{paddingLeft:10}}/> Add Employee </>), component: Addemployee, permissions: '' },\n  { path: '/3', label: (<><ToolOutlined style={{paddingLeft:10}}/> Edit Hotel </>), component: Todo, permissions: '' },\n  { path: '/4', label: (<><HomeOutlined style={{paddingLeft:10}}/> Room </>), component: Todo, permissions: '' },\n  { path: '/5', label: (<><RocketOutlined style={{paddingLeft:10}} rotate={45}/> Form Resquest </>), component: Todo, permissions: '' },\n];\nconst subPages2 = [\n  {path: '/7', label: (<><SelectOutlined /> Booking </>), component: Todo, permissions: ''},\n  {path: '/8', label: (<><GifOutlined /> Voucher </>), component: Todo, permissions: ''},\n];\nconst subPages3 = [\n  {path: '/9', label: (<><AreaChartOutlined /> Inventory Report </>), component: Todo, permissions: ''},\n];\nconst subPages4 = [\n  {path: '/attendance', label: (<><GifOutlined /> Attendance </>), component: Attendance, permissions: ''},\n];\nexport const routerPages = [...subPages1, ...subPages2, ...subPages3, ...subPages4];\n\nexport const menuPages = [\n  {\n    label: 'Manage Empoyee',\n    children: subPages1\n  },\n  {\n    label: 'Manage Booking',\n    children: subPages2\n  },\n  {\n    label: 'Report',\n    children: subPages3\n  },\n  {\n    label: 'Employee',\n    children: subPages4\n  }\n];\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport { User } from '@pkg/reducers';\nimport { _getRequest, _putRequest, _postRequest } from '@pkg/api';\n\nimport { Table, Tag, Modal } from 'antd';\nimport {\n    Form, Input, Button, Radio, Select, DatePicker, message, Row, Col\n} from 'antd';\nimport { filerColumn } from '../../commons';\nimport { FormProvider } from 'antd/lib/form/context';\nimport { MultiSelect } from '../../commons';\nconst dataSource = [\n    {\n        \"id\": \"605c71d6dd9f6b0015132de2\",\n        \"name\": \"My Le\",\n        \"description\": \"none\",\n        \"contactNumber\": \"0912\",\n        \"image\": \"placholder.jpg\",\n        \"address\": \"Phuoc Long, Binhf Phuoc\",\n        \"timeIn\": \"2021-03-25T11:14:32.012Z\",\n        \"timeOut\": \"2021-03-25T11:14:32.012Z\"\n    },\n    {\n        \"id\": \"605c73c348e7a0001538d0a9\",\n        \"name\": \"Hoa Hong\",\n        \"description\": \"nonenonenenoasi\",\n        \"contactNumber\": \"0910291209\",\n        \"image\": \"1616671681653JPEG_example_flower.jpg\",\n        \"address\": \"KTX khu A\",\n        \"timeIn\": \"2021-03-25T11:23:58.604Z\",\n        \"timeOut\": \"2021-03-25T11:23:58.604Z\"\n    }\n]\n\n// export const EmployeeReducer = (state, action) => {\n//     switch (action.type) {\n//       case 'init':\n//         return { ...state, searchFields: extractSearch(action.data)}\n//       case 'get_employee':\n//         return { ...state, searchFields: action.data };\n//       default:\n//         return state;\n//     } \n// }\n\nexport const Hotel = (props) => {\n    const [ user ] = useContext(User.context);\n    const [ lstemp, setLstemp ] = useState([]);\n    const [ popup, setPopup ] = useState({open: false, data: {}});\n    const [ form ] = Form.useForm();\n    useEffect(()=>{\n        // reset form\n        console.log(popup.open)\n        // get employee\n        const getData = async () => {\n            let re = await _getRequest('https://hotel-hrms.herokuapp.com', 'hotel')\n            console.log(re)\n            if (!re.success) {\n                message.error('This is an error message'); // param = res.error\n            }\n            setLstemp(re.result.hotels);\n        }\n        getData();\n    },[])\n\n    const onFinish = async values => {\n        console.log(values, popup.data)\n        try {\n          // post employee \n        //   let re = await _putRequest('https://hotel-hrms.herokuapp.com', 'hotel', values, popup.data.id);\n          let re = await _postRequest('https://hotel-hrms.herokuapp.com/api/auth/signin', {\n                email: \"quict@gmail\",\n                password: \"88888888\"\n          });\n        } catch (e) { \n            message(e);\n        }\n      };\n    \n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n    // dataSource = lstemp\n    console.log(lstemp)\n    return (\n        <>\n            <Table \n                rowKey='id'\n                loading={lstemp.length === 0}\n                dataSource={lstemp} \n                columns={\n                    [\n                        {\n                            title: 'Name',\n                            dataIndex: 'name',\n                            align: 'center',\n                            key: 'name',\n                            ...filerColumn([], 'name'),\n                            onFilter: (value, record) =>\n                                record.name\n                                    ? record.name.toString().toLowerCase().includes(value.toLowerCase())\n                                    : '',\n                        },\n                        {\n                            title: 'description',\n                            dataIndex: 'description',\n                            align: 'center',\n                            key: 'description',\n                        },\n                        {\n                            title: 'Address',\n                            dataIndex: 'address',\n                            align: 'center',\n                            key: 'address',\n                        },\n                        {\n                            title: 'Phone',\n                            dataIndex: 'contactNumber',\n                            align: 'center',\n                            key: 'contactNumber',\n                            render: tags => (\n                              <>\n                                <Tag color={'blue'} key={'phone'}>\n                                    {tags}\n                                </Tag>\n                              </>\n                            ),\n                        },\n                        {\n                            title: 'Action',\n                            align: 'center',\n                            key: 'action',\n                            render: v => <Button onClick={()=>{\n                                setPopup({open: true, data:v});\n                                form.setFieldsValue(v);\n                            }}>Edit</Button>\n                        },\n                        \n                    ]\n                } \n            />; \n            <Modal\n                centered\n                closable={false}\n                maskClosable={false}\n                title= {popup.data.name ? `Edit ${popup.data.name}`: 'Edit' }\n                key='modal_update'\n                width='70%' \n                visible={popup.open}\n                forceRender\n                keyboard\n                okText={'Confirm'}\n                onOk={()=>{form.submit()}}\n                cancelText='Close'\n                onCancel={() => {setPopup({open:false, data:{}}); form.resetFields()}}\n            >\n                <Form\n                    form={form}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    labelCol={{\n                        span: 8,\n                    }}\n                    wrapperCol={{\n                        span: 12,\n                    }}\n                    layout=\"horizontal\"\n                >\n                    <Row gutter={16}>\n                        <Col xs={22} sm={22} md={24}>\n                            <Form.Item label=\"Name\" name=\"name\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Phone\" name=\"contactNumber\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Address\" name=\"address\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Description\" name=\"description\">\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal>\n        </>\n    )\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { User } from '@pkg/reducers';\nimport { _getRequest, _putRequest } from '@pkg/api';\n\nimport { Table, Tag, Modal } from 'antd';\nimport {\n    Form, Input, Button, Radio, Select, DatePicker, message, Row, Col\n} from 'antd';\nimport { filerColumn } from '../../commons';\nimport { FormProvider } from 'antd/lib/form/context';\nimport { MultiSelect } from '../../commons';\nconst dataSource = [\n    {\n        email: \"employee1.5@gmail.com\",\n        password: \"1234\",\n        name: \"employee1\",\n        dateOfBirth: \"Wed Jul 09 1997 00:00:00 GMT+0700 (Indochina Time)\",\n        contactNumber: \"784697240\",\n        address: \"town123\",\n        skills: [\n            \"english\",\n            \"japanese\"\n        ],\n        department: \"Security\",\n        designation: \"Security guard\"\n    },\n    {\n        email: \"employee2@gmail.com\",\n        password: \"88888888\",\n        name: \"employee1\",\n        dateOfBirth: \"Wed Jul 09 1997 00:00:00 GMT+0700 (Indochina Time)\",\n        contactNumber: \"784697240\",\n        address: \"town\",\n        skills: [\n            \"english\"\n        ],\n        department: \"Security\",\n        designation: \"Security guard\"\n    },\n    {\n        email: \"employee3@gmail.com\",\n        password: \"88888888\",\n        name: \"employee1\",\n        dateOfBirth: \"Wed Jul 09 1997 00:00:00 GMT+0700 (Indochina Time)\",\n        contactNumber: \"784697240\",\n        address: \"town\",\n        skills: [\n            \"english\"\n        ],\n        department: \"Security\",\n        designation: \"Security guard\"\n    },\n    {\n        email: \"manager2@gmail.com\",\n        password: \"88888888\",\n        name: \"manager2\",\n        dateOfBirth: \"Wed Jul 09 1997 00:00:00 GMT+0700 (Indochina Time)\",\n        contactNumber: \"784697240\",\n        address: \"town123\",\n        skills: [\n            \"english\",\n            \"japanese\"\n        ],\n        department: \"None\",\n        designation: \"Hotel manager\"\n    }\n]\n\n// export const EmployeeReducer = (state, action) => {\n//     switch (action.type) {\n//       case 'init':\n//         return { ...state, searchFields: extractSearch(action.data)}\n//       case 'get_employee':\n//         return { ...state, searchFields: action.data };\n//       default:\n//         return state;\n//     } \n// }\n\nexport const Employee = (props) => {\n    const [ user ] = useContext(User.context);\n    const [ lstemp, setLstemp ] = useState([]);\n    const [ popup, setPopup ] = useState({open: false, data: {}});\n    const [ form ] = Form.useForm();\n    useEffect(()=>{\n        // reset form\n        console.log(popup.open)\n        // get employee\n        const getData = async () => {\n            const res = await _getRequest('https://hotel-hrms.herokuapp.com','hotel', '', {}, ['605c71d6dd9f6b0015132de2','employee']);\n            if (!res.success) {\n                message.error('This is an error message'); // param = res.error\n            }\n            setLstemp(res.result.employees);\n            \n        }\n        getData();\n    },[])\n\n    const onFinish = async values => {\n        console.log(values)\n        const employee = lstemp.find(item => item.email === values.email)\n        console.log(employee, employee.id)\n        try {\n           // post employee\n            // const res = _putRequest('https://hotel-hrms.herokuapp.com', 'employee', values, employee.id)\n            // console.log(res)\n            // window.location.reload()\n        } catch (e) { \n            message.error(e);\n        }\n      };\n    \n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n    // dataSource = lstemp\n    return (\n        <>\n            <Table \n                rowKey='id'\n                loading={lstemp.length === 0}\n                dataSource={lstemp} \n                columns={\n                    [\n                        {\n                            title: 'Name',\n                            dataIndex: 'name',\n                            align: 'center',\n                            key: 'name',\n                            ...filerColumn([], 'name'),\n                            onFilter: (value, record) =>\n                                record.name\n                                    ? record.name.toString().toLowerCase().includes(value.toLowerCase())\n                                    : '',\n                        },\n                        {\n                            title: 'Phone',\n                            dataIndex: 'contactNumber',\n                            align: 'center',\n                            key: 'contactNumber',\n                        },\n                        {\n                            title: 'Address',\n                            dataIndex: 'address',\n                            align: 'center',\n                            key: 'address',\n                        },\n                        {\n                            title: 'Skills',\n                            dataIndex: 'skills',\n                            align: 'center',\n                            key: 'skills',\n                            render: tags => (\n                              <>\n                                {tags.map((tag,index) => {\n                                  let color = 'geekblue';\n                                  return (\n                                    <Tag color={color} key={index}>\n                                      {tag.toUpperCase()}\n                                    </Tag>\n                                  );\n                                })}\n                              </>\n                            ),\n                        },\n                        {\n                            title: 'Department',\n                            dataIndex: 'department',\n                            align: 'center',\n                            key: 'department',\n                        },\n                        {\n                            title: 'Designation',\n                            dataIndex: 'designation',\n                            align: 'center',\n                            key: 'designation',\n                        },\n                        {\n                            title: 'Action',\n                            align: 'center',\n                            key: 'action',\n                            render: (v,r) => <Button type='primary' onClick={()=>{\n                                setPopup({open: true, data:v});\n                                form.setFieldsValue(v);\n                            }}>Edit</Button>\n                        },\n                        \n                    ]\n                } \n            />; \n            <Modal\n                centered\n                closable={false}\n                maskClosable={false}\n                title= {popup.data.name ? `Edit ${popup.data.name}`: 'Edit' }\n                key='modal_update'\n                width='90%' \n                visible={popup.open}\n                forceRender\n                keyboard\n                okText={'Confirm'}\n                onOk={()=>{form.submit();setPopup({open:false, data:{}});}}\n                cancelText='Close'\n                onCancel={() => {setPopup({open:false, data:{}}); form.resetFields()}}\n            >\n                <Form\n                    form={form}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    labelCol={{\n                        span: 6,\n                    }}\n                    wrapperCol={{\n                        span: 14\n                    }}\n                    layout=\"horizontal\"\n                >\n                    <Row gutter={16}>\n                        <Col xs={22} sm={22} md={12}>\n                            <Form.Item label=\"Email\" name=\"email\">\n                                <Input disabled/>\n                            </Form.Item>\n                            <Form.Item label=\"Name\" name=\"name\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Phone\" name=\"contactNumber\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Address\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Hotel\">\n                                <Select>\n                                    <Select.Option value=\"1\">Hotel 1</Select.Option>\n                                    <Select.Option value=\"2\">Hotel 2</Select.Option>\n                                    <Select.Option value=\"3\">Hotel 3</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                        <Col xs={22} sm={22} md={12}>\n                            {/* <Form.Item label=\"Birthday\" name=\"dateOfBirth\">\n                                <DatePicker />\n                            </Form.Item> */}\n                            <Form.Item label=\"Role\">\n                                <Select>\n                                    <Select.Option value=\"1\">Manager</Select.Option>\n                                    <Select.Option value=\"2\">Employee</Select.Option>\n                                    <Select.Option value=\"3\">Intership</Select.Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item label=\"Department\" name='department'>\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Designation\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item \n                                label=\"Skills\"\n                                getValueFromEvent={v => {\n                                    console.log(v)\n                                    return v;\n                                }}\n                            >\n                                <MultiSelect\n                                    maxTag={3}\n                                    listValue={[{label: 'japanese', value: 'japanese'},{label: 'english', value: 'english'},{label: 'other', value: 'other'}]}\n                                    placeholder={'choose skill'}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal>\n        </>\n    )\n}","import React from 'react';\n\nimport {\n    Form, Input, Button, Radio, Select, DatePicker, InputNumber, Switch, message, Row, Col\n} from 'antd';\n\nexport const Addemployee = (props) => {\n    const [ form ] = Form.useForm();\n\n    const onFinish = async values => {\n        console.log(values)\n        try {\n          // post employee \n        } catch (e) { \n            message(e);\n        }\n      };\n    \n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n    return  (\n        <>\n            <Form\n                form={form}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                labelCol={{\n                    span: 4,\n                }}\n                wrapperCol={{\n                    span: 12,\n                }}\n                layout=\"horizontal\"\n                initialValues={{\n                    email: 'default',\n                }}\n            >\n                <Row gutter={16}>\n                        <Col xs={22} sm={22} md={12}>\n                        <Form.Item label=\"Email\" name=\"email\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Name\" name=\"name\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Phone\" name=\"contactNumber\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Address\" name=\"address\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Hotel\" name=\"hotel\">\n                                <Select>\n                                    <Select.Option value=\"1\">Hotel 1</Select.Option>\n                                    <Select.Option value=\"2\">Hotel 2</Select.Option>\n                                    <Select.Option value=\"3\">Hotel 3</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                        <Col xs={22} sm={22} md={12}>\n                            <Form.Item label=\"Birthdate\" name=\"dateOfBirth\">\n                                <DatePicker />\n                            </Form.Item>\n                            <Form.Item label=\"Role\" name=\"role\">\n                                <Select>\n                                    <Select.Option value=\"1\">Manager</Select.Option>\n                                    <Select.Option value=\"2\">Employee</Select.Option>\n                                    <Select.Option value=\"3\">Intership</Select.Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item label=\"Department\" name=\"department\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Designation\" name=\"designation\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item label=\"Type\" name=\"type\">\n                                <Select\n                                    mode=\"tags\"\n                                    placeholder=\"Choose skill\"\n                                >\n                                    <Select.Option value=\"1\">English</Select.Option>\n                                    <Select.Option value=\"2\">Chinese</Select.Option>\n                                    <Select.Option value=\"3\">France</Select.Option>\n                                    <Select.Option value=\"4\">Other</Select.Option>\n                                </Select>\n                            </Form.Item>\n                            <Button offset={8} onClick={()=>form.submit()}>Submit</Button>\n                        </Col>\n                </Row>\n            </Form>\n            \n        </>\n    )\n}","import React from 'react';\n\nimport { CalendarCustom } from './calender';\n\nexport const Attendance = (props) => {\n    return (\n        <CalendarCustom />\n    )\n}","/* eslint no-extra-boolean-cast: 0 */\n\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { DownOutlined, LogoutOutlined, UserOutlined } from '@ant-design/icons';\n\nimport Layout from 'antd/lib/layout';\nimport Menu from 'antd/lib/menu';\nimport Dropdown from 'antd/lib/dropdown';\nimport Button from 'antd/lib/button';\nimport Switch from 'antd/lib/switch';\n\nimport { menuPages } from '@components/pages'; \nimport { User } from '@pkg/reducers';\n\nconst AdminLayout = props => {\n  const { children } = props;\n  const [ isShow, setIsShow ] = useState(true);\n  const [ user, dispatchUser ] = useContext(User.context);\n\n  const onLogout = () => dispatchUser({type: 'LOGOUT'});\n\n  const subMenu = (\n    <Menu \n      className='custom-header-menu'\n      theme='dark'\n    >\n      <Menu.Item>\n        <Button icon={<LogoutOutlined />} size='small' onClick={onLogout} className='button-noshadow'>Logout</Button>\n      </Menu.Item>\n    </Menu>\n  )\n\n  return (\n    <Layout>\n      <Layout.Header className='custom-header'>\n        <div className='logo'>\n          <div className='logo-wrapper'>\n            <div className='logo-content'>\n              <div className='logo-img' />\n              <div className='logo-text'>\n                <span>CHM</span>\n              </div>\n              <div className='logo-switch'>\n                <Switch checked={isShow} size='small' onChange={value => setIsShow(value)} />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Dropdown overlay={subMenu} className='custom-submenu' trigger={['click']}>\n          <div>\n            <UserOutlined />\n            <span>{user ? user.name : ''}</span>\n            <DownOutlined />\n          </div>\n        </Dropdown>\n      </Layout.Header>\n      <Layout>\n        <Layout.Sider\n          breakpoint='xl'\n          width={220}\n          trigger={null}\n          onCollapse = {(collapse, type)=>{\n            if (document.body.clientWidth <= 1200 && isShow) setIsShow(false)\n            else if (document.body.clientWidth > 1200 && !isShow) setIsShow(true)\n          }}\n          className={`custom-siderbar ${!isShow?'hide-sidebar':''}`}\n        >\n          <Menu\n            theme='dark'\n            mode='inline'\n            defaultSelectedKeys={window.location.pathname}\n            // selectedKeys={[current]}\n            // onClick={this.handleMenuClick}\n          >\n            {menuPages.map((menuItemGroup, menuItemGroupKey) => (\n              <Menu.ItemGroup\n                className='custom-header-group'\n                key={menuItemGroupKey}\n                title={menuItemGroup.label}\n              >\n                {/* {menuItemGroup.children.filter(p => user.isAdmin || user.permissions.indexOf(p.permissions) > -1).map(menuItem =>  */}\n                {menuItemGroup.children.map(menuItem => \n                  <Menu.Item\n                    key={menuItem.path}\n                  >\n                    <Link to={menuItem.path} className={`sideMenuItem ${menuItem.className}`}>\n                      {menuItem.label}\n                    </Link>\n                  </Menu.Item>\n                )}\n              </Menu.ItemGroup>\n            ))}\n          </Menu>\n        </Layout.Sider>\n        <Layout.Content className='custom-content'>\n          {children}\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AdminLayout;\n","import React, { useContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport { Row } from 'antd';\n\nimport Layout from '@components/commons/layout';\nimport { routerPages } from '@components/pages';\nimport { User } from '@pkg/reducers';\n// TODO \n// 1. filter by permissions\nconst RouterContainer = () => {\n  const [ _user ] = useContext(User.context);\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route exact path='/'>\n            <Home /> \n            {/* Nhay vao trang dashboard */}\n          </Route>\n          {/* {routerPages.filter(p =>_user.isAdmin || _user.permissions.indexOf(p.permissions) > -1).map(p => ( */}\n          {routerPages.map(p => (\n            // <Route path={`${p.path}/:param`} key={`${p.path}/:param`}>\n            <Route path={p.path} key={p.path}>\n              <p.component />\n            </Route>\n          ))}\n          <Route path='*'>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default RouterContainer;\n\n// You can think of these components as 'pages'\n// in your app.\n\nfunction Home() {\n  return (\n    <Row>\n      Home\n    </Row>\n  );\n}\nfunction NotFound() {\n  return (\n    <div>\n      <h2>NotFound</h2>\n    </div>\n  );\n}","import React from 'react';\nimport CurrentUser from '@components/auth/currentUser';\nimport RouterContainer from '@pkg/router';\n\nexport default function App() {\n  return (\n    <CurrentUser>\n      <RouterContainer />\n    </CurrentUser>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './statics/main.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}